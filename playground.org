#+title: Playground
* Repl
Start repl
#+begin_src tmux
cd ~/monkey_interpreter
go run main.go
#+end_src
* Keeping Track of Names
#+begin_src tmux
let a = 0; a + 2
let a = 1;
let b = 2;
let c = a + b;
#+end_src
* Indexes
#+begin_src tmux
[1, 2, 3][1]
{"one": 1, "two": 2, "three": 3}["o" + "ne"]
#+end_src
* Functions
#+begin_src tmux
let returnsOne = fn() { 1; };
let returnsOneReturner = fn() { returnsOne; };
returnsOneReturner()();
#+end_src
With parameters
#+begin_src tmux
let one = fn() { 1; };
let two = fn() { let result = one(); return result + result; };
let three = fn(two) { two() + 1; };
three(two);
#+end_src
Builtin's
#+begin_src tmux
push(rest(["piu", "hop", "hey"]), "la", "la", "ley")
#+end_src
* Interpreter vs Virtual machine
#+begin_src tmux
cd ~/monkey_interpreter
go build -o fibonacci ./benchmark
#+end_src

#+begin_src tmux
./fibonacci -engine=eval
#+end_src

#+begin_src tmux
./fibonacci -engine=vm
#+end_src
